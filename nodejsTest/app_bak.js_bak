var createError = require('http-errors');
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var logger = require('morgan');

var indexRouter = require('./routes/index');
var usersRouter = require('./routes/users');

var app = express();

const bodyParser = require('body-parser');

// view engine setup
app.set('views', path.join(__dirname, 'views'));
// app.set('views', 'views');
app.set('view engine', 'ejs');

app.use(logger('dev'));
app.use(express.json());
// app.use(express.urlencoded({extended: false}));
app.use(bodyParser.urlencoded({extended: true}));
// app.use(cookieParser());
// app.use(express.static(path.join(__dirname, 'public')));

// app.use('/', indexRouter);
// app.use('/users', usersRouter);

// catch 404 and forward to error handler
/*app.use(function (req, res, next) {
    next(createError(404));
});*/

// error handler
/*app.use(function (err, req, res, next) {
    // set locals, only providing error in development
    res.locals.message = err.message;
    res.locals.error = req.app.get('env') === 'development' ? err : {};

    // render the error page
    res.status(err.status || 500);
    res.render('error');
});*/




module.exports = app;


// mongo db setting

// database
const mongoose = require('mongoose');
mongoose.connect("mongodb://tester:1234@192.168.99.104:17017/test")
const db = mongoose.connection;

db.once('error', (err) => {
    console.log(err);
});
db.once('open', () => {
    console.log("DB Connected")
});


const PersonSchema = mongoose.Schema({
    name: String,
    age: Number
});

const Person = mongoose.model('person', PersonSchema);


// const express = require('express');
// const app = express();

// read
app.get('/', (req, res) => {
    console.log("in /")

    res.send('In create page!')
    /*Person.find({}, (err, people) => {
        if (err) return res.json(err)

        res.render('index', {people, people})*/
    // });
});

app.get('/:id', (req, res) => {
    Person.findOne({_id: req.param.id}, (err, people) => {
        if (err) return res.json(err)
        res.render('read', {people, people})
    });
});

//create
app.get('/create', (req, res) => {
    console.log('in create ')
    res.send('In create page!')
    // res.render('create')
});

app.post('/create', (req, res) => {
    console.log('in create ')
    Person.create(req.body, (err, people) => {
        if (err) return res.json(err);
        res.redirect('/')
    })

});

/*
app.listen(3000, () => {
    console.log("Server running at port : 3000 !");
})

*/
